install.packages(c("forecast", "geoR", "psych", "qgraph", "randomForest", "Rcmdr", "semTools", "shape", "spatstat", "spgwr", "wavethresh", "wordcloud", "XML", "zoo"))
install.packages("knitr")
plot(1:14)
install.packages("googleVis")
library(igraph)
actors <- data.frame(name=c("Alice", "Bob", "Cecil", "David",
"Esmeralda"),
age=c(48,33,45,34,21),
gender=c("F","M","F","M","F"))
relations <- data.frame(from=c("Bob", "Cecil", "Cecil", "David",
"David", "Esmeralda"),
to=c("Alice", "Bob", "Alice", "Alice", "Bob", "Alice"),
same.dept=c(FALSE,FALSE,TRUE,FALSE,FALSE,TRUE),
friendship=c(4,5,5,2,1,1), advice=c(4,5,5,4,2,3))
g <- graph.data.frame(relations, directed=TRUE, vertices=actors)
print(g, e=TRUE, v=TRUE)
g
plot(g)
#####################################################################################################################################################
#####################################################################################################################################################
source('D:/lav_selmi_simu/run_model/wx_2011_model/Rbiosim.003.r')
install.packages("RNCEP", dependencies=TRUE)
install.packages("RNCEP", dependencies=TRUE)
utils:::menuInstallLocal()
library(RNCEP)
?RNCEP
library(plotKML)
plotKML.env()
class(plotKML.env())
class(plotKML.env())
class(plotKML.env())$`location of gdal_translate program`
class(plotKML.env())$location of gdal_translate program
plotKML.env()$location of gdal_translate program
plotKML.env()$'location of gdal_translate program'
plotKML.env()$`data repository URL`
plotKML.env()$'data repository URL'
install.packages("POT", repos="http://R-Forge.R-project.org")
```{r fig.width=7, fig.height=6}
plot(cars)
library(twitteR)
cielo.meteo.tweets = searchTwitter('#cielo OR meteo', n=1500)
cielo.meteo.tweets
cielo.meteo.tweets = searchTwitter('#cielo', n=1500)
cielo.meteo.tweets = searchTwitter('#cielo', n=1500)
fuorinevica.tweets = searchTwitter('#fuorinevica', n=1500)
fuorinevica.tweets
str(fuorinevica.tweets)
fuorinevica.text = lply(fuorinevica.tweets, function(t) t$getText())
fuorinevica.text = lapply(fuorinevica.tweets, function(t) t$getText())
fuorinevica.text
tweetFrames <- lapply(fuorinevica.text , twListToDF)  # Convert to Tweet DFs.
tweetFrames <- lapply(fuorinevica.tweet , twListToDF)  # Convert to Tweet DFs.
tweetFrames <- lapply(fuorinevica.tweets , twListToDF)  # Convert to Tweet DFs.
tweetFrames <- lapply(fuorinevica.tweets, twListToDF)  # Convert to Tweet DFs.
searchTerms <- c("#fuorinevica")
names(searchTerms) <- searchTerms
searchResults <- lapply(searchTerms, function(tt){
print(tt)
searchTwitter(searchString = tt, n = 1500)  # Get all Tweets with each search term
})
tweetFrames <- lapply(searchResults, twListToDF)  # Convert to Tweet DFs.
tweetFrames
write.csv(tweetFrames,file="prova.csv")
dir()
user <- getUser('valenitna')
friends <- user$getFriends()
library(twitteR)
friends <- user$getFriends()
install.packages("twitteR")
install.packages("wordcloud")
install.packages("rgdal","maptools","raster")
install.packages("rgdal", lib="C:/Program Files/R/R-2.15.2/library")
install.packages("raster", lib="C:/Program Files/R/R-2.15.2/library")
install.packages("rasterVis", lib="C:/Program Files/R/R-2.15.2/library")
install.packages("doBy", lib="C:/Program Files/R/R-2.15.2/library")
install.packages(c("rgeos", "R2HTML", "rgexf", "rJava"), lib="C:/Program Files/R/R-2.15.2/library")
install.packages(c("foreign", "Matrix", "nlme", "rpart", "survival"), lib="C:/Program Files/R/R-2.15.2/library")
install.packages(c("rworldmap", "RWeather", "fda"), lib="C:/Program Files/R/R-2.15.2/library")
install.packages("ROAuth", lib="C:/Program Files/R/R-2.15.2/library")
install.packages("knitr", lib="C:/Program Files/R/R-2.15.2/library")
library("boot", lib.loc="C:/Program Files/R/R-2.15.2/library")
detach("package:boot", unload=TRUE)
install.packages("seewave", lib="C:/Program Files/R/R-2.15.2/library")
install.packages("Rcmdr", lib="C:/Program Files/R/R-2.15.2/library")
librry(Rcmdr)
library(Rcmdr)
install.packages("ReadImages", lib="C:/Program Files/R/R-2.15.2/library")
install.packages("ExactCIdiff", lib="C:/Program Files/R/R-2.15.2/library")
chooseCRANmirror()
local({pkg <- select.list(sort(.packages(all.available = TRUE)),graphics=TRUE)
if(nchar(pkg)) library(pkg, character.only=TRUE)})
installed.package()
installed.packages()
aa=installed.packages()
aa
install.packages('shiny')
install.packages(c("ggplot2", "gtable", "scales", "plyr"))
install.packages(c("colorspace", "EMD", "sem", "SpatialVx", "spatstat"))
install.packages(c("knitr", "rasterVis", "Rcmdr", "rgdal", "rgeos", "rjson"), lib="C:/Program Files/R/R-2.15.2/library")
install.packages("relaimpo", lib="C:/Program Files/R/R-2.15.2/library")
install.packages("clustergas", lib="C:/Program Files/R/R-2.15.2/library")
install.packages("data.table", lib="C:/Program Files/R/R-2.15.2/library")
install.packages("FactoMineR", lib="C:/Program Files/R/R-2.15.2/library")
install.packages("ecodist", lib="C:/Program Files/R/R-2.15.2/library")
require(graphics)
plot(co2, ylab = expression("Atmospheric concentration of CO"[2]),
las = 1)
title(main = "co2 data set")
install.packages("clim.pact", lib="C:/Program Files/R/R-2.15.2/library")
###############################################################################
setwd("C:\\Users\\Alf\\Documents\\GitHub\\races_analitics")
# to modify setup directory dir
####################################################
# Passaggi grafici
old.par <- par(no.readonly=TRUE)
on.exit(par(old.par))
#########################################################################
races_valid <- read.csv("matrix_valid_data.csv", header=TRUE, na.strings="NA")
GLM.ELE <- glm(CB_El_n_08 ~ Durata_risc+MQ +Lavastoviglie+ Condizionatore + Proprieta , family=gaussian(identity), data=races_valid)
GLM.ELE <-stepAIC(GLM.ELE)
summary(GLM.ELE)
library(Rcmdr)
GLM.ELE <- glm(CB_El_n_08 ~ Durata_risc+MQ +Lavastoviglie+ Condizionatore + Proprieta , family=gaussian(identity), data=races_valid)
GLM.ELE <-stepAIC(GLM.ELE)
summary(GLM.ELE)
GLM.ELE <- glm(CB_El_n_08 ~ Durata_risc+MQ +Lavastoviglie+ Condizionatore + Proprieta , family=gaussian(identity), data=races_valid)
GLM.ELE <-stepAIC(GLM.ELE)
summary(GLM.ELE)
GLM.ELE <- glm(CB_El_n_08 ~ Durata_risc+MQ +Lavastoviglie+ Condizionatore + Proprieta , family=gaussian(identity), data=races_valid)
GLM.ELE <-stepAIC(GLM.ELE)
summary(GLM.ELE)
GLM.ELE <- glm(CB_ELE_08~MQ +Lavastoviglie+ Condizionatore + Proprieta , family=gaussian(identity), data=races_valid)
GLM.ELE <-stepAIC(GLM.ELE)
summary(GLM.ELE)
GLM.ELE <- glm(CB_ene_08~MQ +Lavastoviglie+ Condizionatore + Proprieta , family=gaussian(identity), data=races_valid)
GLM.ELE <-stepAIC(GLM.ELE)
summary(GLM.ELE)
GLM.ELE <- glm(CB_ene_08~MQ +Lavastoviglie+ Condizionatore + as.factor(Proprieta) , family=gaussian(identity), data=races_valid)
GLM.ELE <-stepAIC(GLM.ELE)
summary(GLM.ELE)
GLM.ELE <- glm(CB_ene_08~MQ  Condizionatore + as.factor(Proprieta) , family=gaussian(identity), data=races_valid)
GLM.ELE <-stepAIC(GLM.ELE)
summary(GLM.ELE)
GLM.ELE <- glm(CB_ene_08~MQ + Lavastoviglie  + as.factor(Proprieta) , family=gaussian(identity), data=races_valid)
GLM.ELE <-stepAIC(GLM.ELE)
summary(GLM.ELE)
GLM.ELE <- glm(CB_ene_08~MQ + Lavastoviglie   , family=gaussian(identity), data=races_valid)
GLM.ELE <-stepAIC(GLM.ELE)
summary(GLM.ELE)
GLM.ELE <- glm(CB_ene_08~MQ+ Componenti + Lavastoviglie   , family=gaussian(identity), data=races_valid)
GLM.ELE <-stepAIC(GLM.ELE)
summary(GLM.ELE)
GLM.RIS <- glm(CB_ris_08  ~ Durata_risc+HDD_2008+MQ+Tipo_Abitazione+ Componenti + Finestre, family=gaussian(identity), data=races_valid)
GLM.RIS <-stepAIC(GLM.RIS)
summary(GLM.RIS)
GLM.ELE <- glm(CB_ene_08~ CDD_2008+MQ+ Componenti + Lavastoviglie +, family=gaussian(identity), data=races_valid)
GLM.ELE <-stepAIC(GLM.ELE)
summary(GLM.ELE)
GLM.ELE <- glm(CB_ene_08~ HDD_2008+CDD_2008+MQ+ Componenti + Lavastoviglie +, family=gaussian(identity), data=races_valid)
GLM.ELE <-stepAIC(GLM.ELE)
summary(GLM.ELE)
GLM.RIS <- glm(CB_ris_08  ~ HDD_2008+MQ+Tipo_Abitazione+ Componenti + Finestre, family=gaussian(identity), data=races_valid)
GLM.RIS <-stepAIC(GLM.RIS)
summary(GLM.RIS)
G
GLM.ELE <- glm(CB_ene_08~ HDD_2008+CDD_2008+MQ+ Componenti + Lavastoviglie +, family=gaussian(identity), data=races_valid)
GLM.ELE <-stepAIC(GLM.ELE)
summary(GLM.ELE)
GLM.ELE <- glm(CB_ene_08~ HDD_2008+CDD_2008+MQ+ Componenti + as.factor(Lavastoviglie) +as.factor(Condizionatore), family=gaussian(identity), data=races_valid)
GLM.ELE <-stepAIC(GLM.ELE)
summary(GLM.ELE)
GLM.MOB <- glm(CB_mob_08 ~ gp_2008+ Componenti , family=gaussian(identity), data=races_valid)
GLM.MOB <-stepAIC(GLM.MOB)
summary(GLM.MOB)
summary(GLM.ELE)
summary(GLM.RIS)
summary(GLM.MOB)
calc.relimp(GLM.ELE,type=c("lmg"),rela=TRUE) 
library(relaimpo)
calc.relimp(GLM.ELE,type=c("lmg"),rela=TRUE) 
plot(calc.relimp(GLM.ELE,type=c("lmg"),rela=TRUE) )
GLM.ELE <-stepAIC(GLM.ELE)
summary(GLM.ELE)
summary(GLM.RIS)
GLM.ELE <- glm(CB_ene_08~ MQ+ Componenti, family=gaussian(identity), data=races_valid)
plot(calc.relimp(GLM.ELE,type=c("lmg"),rela=TRUE),main="Importance of factors for electricity consumption") 
 GLM.RIS <- glm(CB_ris_08  ~ HDD_2008+MQ+ Componenti + Finestre, family=gaussian(identity), data=races_valid)
plot(calc.relimp(GLM.RIS,type=c("lmg"),rela=TRUE),main="Importance of factors \nfor electricity consumption") 
 GLM.RIS <- glm(CB_ris_08  ~ HDD_2008+MQ+ Componenti, family=gaussian(identity), data=races_valid)
plot(calc.relimp(GLM.RIS,type=c("lmg"),rela=TRUE),main="Importance of factors \nfor electricity consumption") 
GLM.MOB <- glm(CB_mob_08 ~ gp_2008+ Componenti , family=gaussian(identity), data=races_valid)
plot(calc.relimp(GLM.MOB,type=c("lmg"),rela=TRUE),main="Importance of factors \n for CB mobility ") 
GLM.ELE <- glm(CB_ene_08~ MQ+ Componenti, family=gaussian(identity), data=races_valid)
plot(calc.relimp(GLM.ELE,type=c("lmg"),rela=TRUE),main="Importance of factors \n for CB electricity ") 
GLM.RIS <- glm(CB_ris_08  ~ HDD_2008+MQ+ Componenti , family=gaussian(identity), data=races_valid)
plot(calc.relimp(GLM.RIS,type=c("lmg"),rela=TRUE),main="Importance of factors \n for CB heating ") 
GLM.MOB <- glm(CB_mob_08 ~ gp_2008+ Componenti , family=gaussian(identity), data=races_valid)
plot(calc.relimp(GLM.MOB,type=c("lmg"),rela=TRUE),main="Importance of factors \n for CB mobility ") 
